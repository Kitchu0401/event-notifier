doctype html
html(lang='ko')

  head
    title Event Notifier
    meta(charset='UTF-8' name='viewport', content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet', type='text/css' href='/event/subscriber/static/styles/bulma.min.css')
    link(rel='stylesheet', type='text/css' href='/event/subscriber/static/styles/font-awesome.min.css')
    script(src='/event/subscriber/static/scripts/jquery-3.2.1.min.js')
    script(src='/event/subscriber/static/scripts/vue.min.js')
    script.
      $(function () {
        // Main app 선언
        var app = new Vue({
          el: '#app',
          data: function () {
            return {
              formId: '',
              formTag: '',
              errorMsg: '',
              user: null,
              guidePage: 0,
              guide: [
                { imgSrc: '/event/subscriber/static/images/guide-0.png', content: '먼저 텔레그램에서 @OomEventNotifier를 찾아주세요.' },
                { imgSrc: '/event/subscriber/static/images/guide-1.png', content: '대화를 시작하면 바로 텔레그램 ID를 알려줍니다.' },
                { imgSrc: '/event/subscriber/static/images/guide-2.png', content: '확인하신 텔레그램 ID를 이 창에 입력해주세요.' },
                { imgSrc: '/event/subscriber/static/images/guide-3.png', content: '이제 모임 정보를 받아볼 키워드를 추가할 수 있습니다!' },
                { imgSrc: '/event/subscriber/static/images/guide-4.png', content: '추가한 키워드를 포함하는 이벤트가 등록되면<br/>텔레그램 봇이 알려드립니다.' }
              ]
            }
          },
          mounted: function () {
            // 직전 로그인에 성공했다면 해당 TelegramUserId를 input에 자동으로 할당한다.
            this.formId = localStorage.getItem('eventnotifier-last-login-id') || ''

            $('input[name="formId"]').focus()
          },
          methods: {
            login: function () {
              $.getJSON('/event/subscriber/' + this.formId, function (result) {
                if ( result.success ) {
                  // 로그인시 로그인에 성공한 TelegramUserId를 로컬 저장소에 저장한다.
                  localStorage.setItem('eventnotifier-last-login-id', result.user.id)

                  this.user = result.user
                  this.user.tags.sort()

                  $('input[name="formTag"]').focus()
                } else {
                  alert(result.message)
                }
              }.bind(this))
            },
            loadTagList: function (e) {
              let code = e.which || e.keyCode
              if ( code !== 13 && code !== 9 ) {
                this.formTag = e.target.value

                console.log(code)
                console.log(this.formTag)
                console.log(e.target.value)
              }
            },
            addTag: function () {
              if ( this.validate() === false ) { return }
              
              let id = this.user.id
              let tag = this.formTag
              
              $.ajax({
                url: '/event/subscriber/tag',
                type: 'PUT',
                dataType: 'json',
                data: { id: id, tag: tag }
              })
              .done(function (result) {
                if ( result.success ) {
                  this.user.tags.push(this.formTag)
                  this.user.tags.sort()
                  this.formTag = ''
                } else {
                  this.showError(result.message)
                }
              }.bind(this))
            },
            removeTag: function (index) {
              let id = this.user.id
              let tag = this.user.tags[index]
              
              $.ajax({
                url: '/event/subscriber/tag',
                type: 'DELETE',
                dataType: 'json',
                data: { id: id, tag: tag }
              })
              .done(function (result) {
                if ( result.success ) {
                  this.user.tags.splice(index, 1)
                  this.user.tags.sort()
                } else {
                  this.showError(result.message)
                }
              }.bind(this))
            },
            validate: function () {
              try {
                if ( this.formTag.length < 2 || this.formTag.length > 10 ) throw '키워드는 2글자 이상 10글자 이하로 입력해주세요.'
                if ( this.user.tags.includes(this.formTag) ) throw '이미 등록한 키워드입니다.'
                if ( this.user.tags.length >= 50 ) throw '키워드는 50개까지 등록 가능합니다.'
              } catch (error) {
                this.showError(error)
                return false
              }
            },
            showError: function (message) {
              clearTimeout(this.errorTimeout)
              this.errorMsg = message
              this.errorTimeout = setTimeout(function () { this.errorMsg = '' }.bind(this), 3000)
            }
          }
        })

      })
    style.
      /* style for dot-style pagination */
      .nav-dot {
        width: 11px;
        height: 11px;
        margin: 0px 4px;
        border-radius: 100%;
        display: inline-block;
        background-color: rgba(0, 0, 0, 0.3);
      }
      .nav-dot.active {
        background-color: rgba(0, 0, 0, 0.6);
      }
      /* style for vue.js transition */
      .fade-enter-active, .fade-leave-active {
        transition: opacity .5s
      }
      .fade-enter, .fade-leave-to {
        opacity: 0
      }

  body
    div#app
      nav.nav.has-shadow
        nav.nav-left
          span.nav-item(style='width: 160px;')
            strong Event Notifier
            a.icon(href='https://github.com/Kitchu0401/event-notifier' style='margin-left: 4px;')
              i.fa.fa-github
        nav.nav-center.is-hidden-mobile
          span.nav-item.has-text-centered
            strong #{userCount} &nbsp;
            span subscribers, &nbsp;
            strong #{tagCount} &nbsp;
            span keywords.
        nav.nav-right
          a.nav-item(href='http://onoffmix.com/' style='width: 160px;')
            strong onoffmix.com
      div.container(style='padding: 20px;')
        div.columns
          div.column.is-offset-2.is-8

            // Login form
            div.level(v-if='!user')
              div.level-item.level-center
                div.field
                  p.control
                    p.is-centered(style='margin-bottom: 6px;') Type ID and press enter!
                    input.input(type='text', name='formId', v-model='formId', v-on:keyup.enter.stop='login')

            // Logged contents
            div.level(v-if='user')
              div.level-item.level-center
                div.field
                  p.control
                    h3.title(style='text-align: center;') Welcome, {{ user.first_name }} {{ user.last_name }}
                    p(style='margin-bottom: 6px; text-align: center;') Type tag and press enter!
                    input.input(type='text', name='formTag', v-model='formTag', v-on:keyup.enter.stop='addTag')
                    // input.input(type='text', name='formTag', v-model='formTag', v-on:keyup='loadTagList', v-on:keyup.enter.stop='addTag')
                  // Error message
                  transition(name='fade', v-if='errorMsg')
                    article.message.is-danger(style='margin-top: 6px; text-align: center;')
                      div.message-body(style='padding: 6px;') {{ errorMsg }}
              
            div(style='text-align: center;', v-if='user')
              span.tag.is-medium(style='margin-right: 8px; margin-bottom: 8px;', v-for='(tag, index) in user.tags') {{ tag }}
                button.delete.is-small(v-on:click='removeTag(index)')
        
        <br/>

        // Guide
        div.columns(v-if='!user')
          div.column.is-offset-3.is-6(style='text-align: center;')
            nav.pagination.is-centered
              ul.pagination-list
                li.is-small(v-for='(link, index) in guide')
                  a.nav-dot(v-if='index !== guidePage', v-on:click='guidePage = index') 
                  a.nav-dot.active(v-if='index === guidePage') 
            p(style='margin: 8px 0px 12px;', v-html='guide[guidePage].content') 
            img(style='border: 1px solid rgba(0, 0, 0, 0.2); border-radius: 6px;', v-bind:src='guide[guidePage].imgSrc')
        
        // Recently registered events
        div.columns(v-if='user')
          div.column.is-offset-2.is-8
            div.panel
              div.panel-heading(style='text-align: center;') 최근 등록된 모임들
              if eventList.length > 0
                for event in eventList
                  div.panel-block
                    a(href=event.link) Link &nbsp;
                    span #{event.title}
              else
                div.panel-tabs
                  p(style='margin: 8px 0px;') 확인된 모임이 없습니다. :(

              
